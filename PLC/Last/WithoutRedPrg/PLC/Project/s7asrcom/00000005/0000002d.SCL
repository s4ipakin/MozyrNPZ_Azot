FUNCTION LinTrafo : VOID
VAR_INPUT
    
    IN_WORD: WORD;                (* input value*)
    IN_MIN:REAL;            (* minimum input value *)
    IN_MAX:REAL;            (* maximum input value *)
    OUT_MIN:REAL;        (* corresponding minimum output value *)
    OUT_MAX:REAL;        (* corresponding maximum output value *)
END_VAR
VAR_OUTPUT
    OUT: REAL;            (* output value *)
    ERROR: BOOL;        (* error: IN_MIN = IN_MAX or IN out of interval *)
END_VAR
VAR
    Diff: REAL;
    IN: INT;
    IN_REAL: REAL;
END_VAR


BEGIN
    IN:= WORD_TO_INT(IN_WORD);
    IN_REAL:= INT_TO_REAL(IN);
    Diff := IN_MAX-IN_MIN;
    ERROR := (*(Diff=0) OR ((*IN*)IN_REAL<IN_MIN) OR ((*IN*)IN_REAL>IN_MAX)*) IN_WORD = 16#8000;

    IF NOT ERROR THEN
        OUT := ((*IN*)IN_REAL-IN_MIN)/Diff * (OUT_MAX-OUT_MIN) + OUT_MIN;
        IF IN_REAL < IN_MIN THEN
            OUT := OUT_MIN;
        END_IF;
    ELSIF (IN_REAL>IN_MAX)AND IN_REAL < 32767.0 THEN
        OUT :=OUT_MAX;
    ELSE
        OUT :=0.0;   
    END_IF;
    
     
    

END_FUNCTION






FUNCTION LinTrafoInt : VOID
VAR_INPUT
    
    IN: INT;                (* input value*)
    IN_MIN:REAL;            (* minimum input value *)
    IN_MAX:REAL;            (* maximum input value *)
    OUT_MIN:REAL;        (* corresponding minimum output value *)
    OUT_MAX:REAL;        (* corresponding maximum output value *)
END_VAR
VAR_OUTPUT
    OUT: REAL;            (* output value *)
    ERROR: BOOL;        (* error: IN_MIN = IN_MAX or IN out of interval *)
END_VAR
VAR
    Diff: REAL;
    
    IN_REAL: REAL;
END_VAR


BEGIN
    //IN:= WORD_TO_INT(IN_WORD);
    IN_REAL:= INT_TO_REAL(IN);
    Diff := IN_MAX-IN_MIN;
    ERROR := (Diff=0) OR ((*IN*)IN_REAL<IN_MIN) OR ((*IN*)IN_REAL>IN_MAX);

    IF NOT ERROR THEN
        OUT := ((*IN*)IN_REAL-IN_MIN)/Diff * (OUT_MAX-OUT_MIN) + OUT_MIN;
    END_IF;

END_FUNCTION
